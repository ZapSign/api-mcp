services:
  # HTTPS Reverse Proxy (Nginx) for EC2 deployment
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - mcp-zapsign-server
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Production MCP ZapSign Server
  mcp-zapsign-server:
    build: .
    container_name: mcp-zapsign-server
    expose:
      - "3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - ENABLE_RATE_LIMITING=true
      - MAX_REQUESTS_PER_MINUTE=100
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  # Development MCP ZapSign Server
  mcp-zapsign-server-dev:
    build: .
    container_name: mcp-zapsign-server-dev
    ports:
      - "3002:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - LOG_LEVEL=debug
      - ENABLE_RATE_LIMITING=false
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    restart: unless-stopped
    command: npm run dev
    networks:
      - mcp-network

  # Let's Encrypt SSL Certificate Manager (Optional)
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/webroot:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email your-email@example.com --agree-tos --no-eff-email -d your-domain.com
    depends_on:
      - nginx-proxy
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge
